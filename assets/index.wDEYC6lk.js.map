{"version":3,"file":"index.wDEYC6lk.js","sources":["../../src/DynamicForm.jsx","../../src/App.jsx","../../src/main.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  TextField,\n  Button,\n  Box,\n  Typography,\n  MenuItem,\n  Paper,\n  Grid\n} from '@mui/material';\nimport formConfig from './formConfig.json';\n\n// 根据配置生成验证架构\nconst generateValidationSchema = (fields) => {\n  const schema = {};\n  \n  fields.forEach(field => {\n    let validator;\n    \n    // 根据字段类型设置正确的验证器\n    switch (field.type) {\n      case 'email':\n        validator = Yup.string().email('请输入有效的邮箱地址');\n        break;\n      case 'number':\n        validator = Yup.number();\n        break;\n      case 'select':\n        validator = Yup.string();\n        break;\n      default:\n        validator = Yup.string();\n    }\n    \n    // 添加通用验证规则\n    if (field.required) {\n      validator = validator.required(`${field.label}是必填项`);\n    }\n    \n    if (field.minLength) {\n      validator = validator.min(field.minLength, `${field.label}最少${field.minLength}个字符`);\n    }\n    \n    if (field.maxLength) {\n      validator = validator.max(field.maxLength, `${field.label}最多${field.maxLength}个字符`);\n    }\n    \n    // 数字类型特有的验证\n    if (field.type === 'number') {\n      if (field.min !== undefined) {\n        validator = validator.min(field.min, `${field.label}最小值为${field.min}`);\n      }\n      if (field.max !== undefined) {\n        validator = validator.max(field.max, `${field.label}最大值为${field.max}`);\n      }\n    }\n    \n    schema[field.name] = validator;\n  });\n  \n  return Yup.object().shape(schema);\n};\n\nconst DynamicForm = () => {\n  const [searchResults, setSearchResults] = useState(null);\n  \n  // 生成初始值\n  const initialValues = formConfig.fields.reduce((acc, field) => {\n    acc[field.name] = '';\n    return acc;\n  }, {});\n\n  const validationSchema = generateValidationSchema(formConfig.fields);\n\n  const handleSubmit = (values, { setSubmitting }) => {\n    // 模拟提交\n    setTimeout(() => {\n      setSearchResults(values);\n      setSubmitting(false);\n    }, 500);\n  };\n\n  return (\n    <Box sx={{ width: '100%', p: 2 }}>\n      <Paper elevation={3} sx={{ p: 3 }}>\n        <Typography variant=\"h5\" gutterBottom>\n          {formConfig.title}\n        </Typography>\n        \n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={handleSubmit}\n        >\n          {({ values, errors, touched, handleChange, handleBlur, isSubmitting }) => (\n            <Form>\n              <Grid \n                container \n                spacing={formConfig.layout?.container?.spacing || 2}\n              >\n                {formConfig.fields.map((field) => (\n                  <Grid \n                    item \n                    key={field.name}\n                    {...(field.grid || { xs: 12 })}\n                  >\n                    {field.type === 'select' ? (\n                      <TextField\n                        select\n                        fullWidth\n                        name={field.name}\n                        label={field.label}\n                        value={values[field.name]}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        error={touched[field.name] && Boolean(errors[field.name])}\n                        helperText={touched[field.name] && errors[field.name]}\n                      >\n                        {field.options.map((option) => (\n                          <MenuItem key={option.value} value={option.value}>\n                            {option.label}\n                          </MenuItem>\n                        ))}\n                      </TextField>\n                    ) : (\n                      <TextField\n                        fullWidth\n                        name={field.name}\n                        label={field.label}\n                        type={field.type}\n                        value={values[field.name]}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        error={touched[field.name] && Boolean(errors[field.name])}\n                        helperText={touched[field.name] && errors[field.name]}\n                      />\n                    )}\n                  </Grid>\n                ))}\n                \n                <Grid item xs={12}>\n                  <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={isSubmitting}\n                    fullWidth\n                  >\n                    提交\n                  </Button>\n                </Grid>\n              </Grid>\n            </Form>\n          )}\n        </Formik>\n\n        {searchResults && (\n          <Box sx={{ mt: 3 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              表单数据：\n            </Typography>\n            <pre>\n              {JSON.stringify(searchResults, null, 2)}\n            </pre>\n          </Box>\n        )}\n      </Paper>\n    </Box>\n  );\n};\n\nexport default DynamicForm; ","import React from 'react';\nimport DynamicForm from './DynamicForm';\n\nfunction App() {\n  return (\n    <div>\n      <DynamicForm />\n    </div>\n  );\n}\n\nexport default App; ","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App'\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n) "],"names":["generateValidationSchema","fields","schema","field","validator","Yup.string","Yup.number","Yup.object","DynamicForm","searchResults","setSearchResults","useState","initialValues","formConfig","acc","validationSchema","handleSubmit","values","setSubmitting","Box","jsxs","Paper","jsx","Typography","Formik","errors","touched","handleChange","handleBlur","isSubmitting","Form","Grid","_b","_a","TextField","option","MenuItem","Button","App","ReactDOM","React"],"mappings":"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"}